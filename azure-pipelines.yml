# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: Azure Pipelines
variables:
- group: sonarcloud-properties
  
stages:


- stage: Review_SAST
 
  
  jobs:
  - job: sonar
    displayName:  Code Review
    steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'sonar-cloud'
          organization: '$(sonarCloudOrganization)'
          projectKey: '$(sonarCloudProjectKey)'
          projectName: '$(sonarCloudProjectName)'
        displayName: 'Preparing Sonarqube Environment'
    

      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest'
          
  
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
        displayName: 'Publish Analysis Results'
        
      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'sonar-cloud'
          organization: '$(sonarCloudOrganization)'

- stage: Review_SCA


  jobs:
  - job: sca
    displayName: Review SCA
    steps:

     - task: Maven@3
       inputs:
         mavenPomFile: 'pom.xml'
         publishJUnitResults: false
         javaHomeOption: 'JDKVersion'
         jdkVersionOption: '1.8'
         mavenVersionOption: 'Default'
         mavenAuthenticateFeed: false
         effectivePomSkip: false
         sonarQubeRunAnalysis: false

      
     - task: dependency-check-build-task@6
       inputs:
         projectName: 'spring-boot-kubernetes'
         scanPath: 'target/*.jar'
         format: 'HTML, JSON'
         failOnCVSS: '3'
         



        